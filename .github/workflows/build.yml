name: Build Desktop Installers

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Build with PyInstaller
      run: pyinstaller TitanVideo.spec
    - name: Create AppImage
      run: |
        mkdir -p AppDir
        cp -r dist/TitanVideo/* AppDir/ 2>/dev/null || true
        cp TitanVideo.py AppDir/
        cp UI_Interface.html AppDir/
        cp README.md AppDir/
        cp LICENSE AppDir/
        wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool
        ./appimagetool AppDir TitanVideo.AppImage
    - name: Upload Linux build
      uses: actions/upload-artifact@v4
      with:
        name: TitanVideo-Linux-AppImage
        path: TitanVideo.AppImage

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Build with PyInstaller
      run: pyinstaller --onefile --windowed --name TitanVideo TitanVideo.py
    - name: Create ZIP archive
      run: |
        cd dist
        Compress-Archive -Path TitanVideo.exe -DestinationPath TitanVideo_Windows.zip
    - name: Upload Windows build
      uses: actions/upload-artifact@v4
      with:
        name: TitanVideo-Windows-ZIP
        path: dist/TitanVideo_Windows.zip

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Build with PyInstaller
      run: pyinstaller TitanVideo.spec
    - name: Create DMG
      run: |
        hdiutil create -volname "TitanVideo" -srcfolder dist/TitanVideo.app -ov -format UDZO TitanVideo.dmg
    - name: Upload macOS build
      uses: actions/upload-artifact@v4
      with:
        name: TitanVideo-macOS-DMG
        path: TitanVideo.dmg

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: Download Linux build
      uses: actions/download-artifact@v4
      with:
        name: TitanVideo-Linux-AppImage
    - name: Download Windows build
      uses: actions/download-artifact@v4
      with:
        name: TitanVideo-Windows-ZIP
    - name: Download macOS build
      uses: actions/download-artifact@v4
      with:
        name: TitanVideo-macOS-DMG
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          TitanVideo.AppImage
          TitanVideo_Windows.zip
          TitanVideo.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
